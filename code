
#DICTIONARY
unit_price = {}
product={}
category={}
stock={} 


try:
    details = open("stockofitems.txt","r") #Opening the file (stockofitems.txt) for the stock info

    no_items = int((details.readline()).rstrip("\n")) 

    for i in range(0,no_items):
        line = (details.readline()).rstrip("\n")
        x1,x2 = line.split("#")
        x1=int(x1)
        x2=float(x2)
        unit_price.update({x1: x2})
	 
    for i in range(0,no_items):
        line = (details.readline()).rstrip("\n")
        x1,x2 = line.split("#")
        x1=int(x1)
        product.update({x1: x2})
	        
    for i in range(0,no_items):
        line = (details.readline()).rstrip("\n")
        x1,x2 = line.split("#")
        x1=int(x1)
        category.update({x1: x2})
	        
    for i in range(0,no_items):
        line = (details.readline()).rstrip("\n")
        x1,x2 = line.split("#")
        x1=int(x1)
        x2=int(x2)
        stock.update({x1: x2})

except:
    print("Stock empty") 

finally:
    details.close() 

cart=[] 

c="y"

print("Welcome to Inventory Management System")
print()

are_you_sure = input("Are you sure you want to proceed?(y/n)? ")
#Commands to be displayed once the user wishes to proceed
if (are_you_sure == "y" or are_you_sure == "Y"):
    print("System is ready to process.")
    print("	")
    print("|	A-Add an item	|")
    print("	")
    print("|	R-Remove an item	|")
    print("	")
    print("|	E-Edit specifics of an item	|")
    print("	")
    print("|	L-List all items	|")
    print("	")
    print("|	I-Inquire about an item	|")
    print("	")
    print("|	P-Purchase	|")
    print("	")
    print("|	C-Checkout	|")
    print("	")
    print("|	S-Show all items purchased	|")
    print("	")
    print("|	Q-Quit	|")
    print("	")
    print("|	Remove-Remove an item from the cart |")
    print("	")
    print("|	Help-See all commands again	|")
    print("	")
    print()
#if answered “n” or “N” , the system will exit and close
elif (are_you_sure == "n" or are_you_sure == "N"):
    print("System is Closing	")
    exit() 

total_cost=0
flag=0 

while (c != "q" or c != "Q"):
    c = input("		-------------------------- What would you like to do?		")

    if(c=="q" or c=="Q"):
        break

    elif(c=="A" or c=="a"):#adding item in the array of item stocks; list of all items will be updated
        p_no = int(input("-->Enter item number: "))
        p_pr = float(input("-->Enter item price: "))
        p_prod = input("-->Enter product name: ")
        p_cat = input("-->Enter item category: ")
        p_stock = int(input("-->Enter item stock: ")) 

    m=0
    for	i in range(0,len(unit_price)):
            if(p_no in unit_price):
                p_no+=1
            m=1
            if(m==1):
                print()
                print("That item number already exists :(, changing value to ",p_no) 
                
            unit_price.update({p_no: p_pr})
            product.update({p_no: p_prod})
            category.update({p_no: p_cat})
            if(p_stock > -1):
                stock.update({p_no: p_stock})
            else:
                p_stock = 0
                stock.update({p_no: p_stock})
            print("The stock of an item cannot be negative, the stock has been set to 0.")
            print()
            print("Item number: ",p_no,"\nProducts: ",product.get(p_no),"\nPrice:PHP",unit_price.get(p_no),"\nCategory:",(p_cat),"\nStock: ",product.get(p_no))
            print("Item was added successfully!")
            print() 

    elif (c=="E" or c=="e"): #user is capable of adding new item to the stock of items
        print()
        p_no = int(input("-->Enter item number: "))
        if(p_no in unit_price):
            p_pr = float(input("-->Enter item price: "))
            p_prod = input("-->Enter product name: ")
            p_cat = input("-->Enter product category: ")
            p_stock = int(input("-->Enter item stock: ")) 

            unit_price.update({p_no: p_pr})
            product.update({p_no: p_prod})
            category.update({p_no: p_cat})
            stock.update({p_no: p_stock}) 

        else:
            print("That item does not exist, to add an item use a")
        print()


    elif(c=="R" or c=="r"): #user is capable of removing an item/items from the list; list of all items will be updated
        print()
        p_no = int(input("-->Enter item number: "))
        if(p_no in unit_price):
            are_you_sure = input("Are you sure you want to remove that item(y/n)? ")
            if(are_you_sure=="y" or are_you_sure=="Y"):
                unit_price.pop(p_no)
                product.pop(p_no)
                category.pop(p_no)
                    stock.pop(p_no)
                    print("Item successfully removed!")
                print()
        else:
                print("Oops!Sorry, we don't have such an item!")
                print()
	
    elif (c == "L" or c == "l"):#arrays of items available together with their details will be displayed
        print()
        print("")
        print("	| List of Available Items |")
        print("")
        print("")
        print(" | Products: ", product)
        print(" 	")
        print(" | Prices: ", "PHP", unit_price)
        print("")
        print(" | Category: ", category)
        print("")
        print(" | Stock left of Item: ", stock)
        print("")
        print() 

    elif(c=="I" or c=="i"):#user will just enter item he wishes to inquire then all product details will be displayed
        print()
        p_no=int(input("-->Enter Item Number: "))
        if(p_no in unit_price):
            print()
            print("Item number: ",p_no,"\nProducts: ",product.get(p_no),"\nPrice:PHP",unit_price.get(p_no),"\nCategory: ",category.get(p_no),"\nStock: ",stock.get(p_no))
            if(stock.get(p_no)<3 and stock.get(p_no)!=0):
                print("Only ",stock.get(p_no)," remaining! Hurry!")
            print()
        else:
            print("Sorry we don't have such an item!")
            print()
	
    elif(c=="P" or c=="p"):#purchasing will be executed of the item number is in the list or the item is not out of stock
        print()
        p_no = int(input("-->Enter Item number: "))
        if(p_no in unit_price):
            if(flag==1):
                flag=0
            stock_current = stock.get(p_no)
            if(stock_current>10):
                stock_current = stock.get(p_no)
                stock[p_no] = stock_current-1
                item_price = unit_price.get(p_no)
                total_cost = total_cost+item_price
                print(product.get(p_no),"added to cart: ","PHP",item_price)
                cart.append(p_no)
            elif(stock_current is None):
                    print("No items yet.")
            else:
                print("Sorry! We don't have that item in stock!")
            else:
                print("Sorry! We don't have such an item!")
            print() 

        elif(c=="C" or c=="c"): #items you have purchased will be displayed and the total cost with 12% tax will be computed; giving the total cost payable
            print()
            print("You bought the following items: ",cart)
            print("Total: ","PHP",round(total_cost,2))
            tax = round(0.12*total_cost, 2)
            print("Tax is 12%: ","PHP",tax)
            total = round(total_cost + tax,2)
            print("After Tax: ","PHP",total)
            total_cost=0
            flag=1
            print()
            print("You can still purchase items after check out, your cart has been reset. To quit press q")
            print() 

        elif(c=="help"): #will remind the user what commands are available in the system
            print()
            print("Help Centre")
            print("A-Add an item")
            print("R-Remove an item")
            print("E-Edit specifics of an item")
            print("L-List all items")
            print("I-Inquire about an item")
            print("P-Purchase")
            print("C-Checkout")
            print("S-Show all items purchased")
            print("remove-Remove an item from the cart")
            print("help-See all commands again")
            print("If you have any other questions or concerns please contact the manager.")
            print() 

        elif(c=="remove" or c=="Remove"):#to remove an item from the cart
            print()
            are_you_sure = input("Are you sure you want to remove an item from the cart(y/n)? ")
            if(are_you_sure=="y"):
                p_no = int(input("-->Enter item number to remove from cart: "))
                if(p_no in cart):
                    stock_current = stock.get(p_no)
                    stock[p_no] = stock_current+1
                    item_price = unit_price.get(p_no)
                    total_cost = total_cost-item_price
                    j=0
                    for i in range(0,len(cart)):
                        if(i==p_no):
                            j=i

                    cart.pop(j)
                    print(category.get(p_no),"removed from cart: ")
                    print()
                else:
                    print()
                    print("That item is not in your cart!")
                    print()

    elif(c=="s" or c=="S"): #it will show all the items that you added to cart
        print()
        print(cart)
        print() 

    else:
        print()
        print("ERROR! Contact manager for help!")
        print() 



if(total_cost>0 and flag==0):
    print()
    print("You bought: ",cart)
    print("Total: ","PHP",round(total_cost,2))
    tax= round(0.12*total_cost,2)
    print("Tax is 12%: ","PHP",tax)
    total = round(total_cost+tax,2)
    print("After Tax: ","PHP",total)
    print("Thank you for using Inventory Management System!") 

try:
    details = open("stockofitems.txt","w")
    no_items=len(unit_price)
    details.write(str(no_items)+"\n")
    for i in range(0,no_items):
        details.write(str(i+1)+"#"+str(unit_price[i+1])+"\n")

    for	i in range(0,no_items):
        details.write(str(i+1)+"#"+category[i+1]+"\n")
		
    for	i in range(0,no_items):
        details.write(str(i+1)+"#"+str(stock[i+1])+"\n")
except:	
print("Stock saved")
	
finally:
    details.close()
